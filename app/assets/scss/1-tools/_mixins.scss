// Container

@mixin container {
  max-width: #{$container};
  @include margin(null auto);
  position: relative;

  @media #{$sp} {
    @include padding(null 15px);
  }
}

// Clear fix （Bourbon には入っているけど、念のために）

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}


// Hover opacitiy for links ( just so they're all the same )

@mixin hoverlink {
  transition: 0.2s ease-in-out;
  backface-visibility: hidden;
  cursor: pointer;
  &:hover {
    opacity: 0.7;
  }
  &::before,
  &::after {
    backface-visibility: hidden;
  }
}


@mixin lhCrop($line-height) {
  &::before {
    content: '';
    display: block;
    height: 0;
    width: 0;
    margin-top: calc((1 - #{$line-height}) * 0.5em);
  }

  &::after {
    content: '';
    display: block;
    height: 0;
    width: 0;
    margin-bottom: calc((1 - #{$line-height}) * 0.5em);
  }
}

// =========================================================================================*/
// #追加した関数
// =========================================================================================*/

/*==================================
# リキッドレイアウト
===================================*/

// pxからremへの計算式
// 例：myrem(32) → 2rem
@function myrem($pixels) {
  @return ($pixels / 16) * 1rem;
}

// 数値のみを取り出す
// 例：strip-unit(16px) → 16
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// フォントサイズ ÷ 画面幅 * 100vw の計算 
// 例：vw(1250px, 16px) → 16px ÷ 1250px × 100vw
@function vw($window_width, $size) {
  @return ($size / $window_width) * 100vw;
}

// ルートフォント設定
html {
  // インナー幅＋余白+1px ~
  font-size: 100%;

  // 768px ~ インナー幅＋余白
  @media ( max-width: $container ) {
    font-size: vw(1440, 16);
  }

  // 390px ~ 767px
  @media #{$sp} {
    font-size: 100%;
  }

  // ~ 390px
  @media (max-width: 390px) {
    font-size: vw(390, 16);
  }
}